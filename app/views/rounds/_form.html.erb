<div class="card-body">
    <%= form_with(model: round, local: true, class: 'form-group') do |form| %>
    <% if round.errors.any? %>
    <div id="error_explanation">
        <h2><%= pluralize(round.errors.count, "error") %> a empêchée cette tournée d'être sauvegardé:</h2>

        <ul>
            <% round.errors.full_messages.each do |message| %>
            <li><%= message %></li>
            <% end %>
        </ul>
    </div>
    <% end %>

    <div class="field">
        <h4><%= form.label :round_name, value: 'Nom' %></h4>
        <%= form.text_field :round_name, class: 'form-control', placeholder: 'Tournée 1' %>
    </div>
    <br />
    <div class="field">
        <h4>Stations</h4>
        <%= select_tag("station_ids[]", options_for_select(Station.all.collect { |s| ["#{s.station_number} #{s.station_name}", s.id] }, @round.stations.collect { |s| s.id}), {:multiple=>true, class: 'custom-select custom-select-lg sortable'})%>
    </div>
    <br />
    <div class="field">
        <h4>Horaires</h4>
        <%= select_tag("schedule_ids[]", options_for_select(Schedule.all.collect { |s| [s.schedule.strftime("%H:%M"), s.id] }, @round.schedules.collect { |s| s.id}), {:multiple=>true, class: 'custom-select custom-select-lg'})%>
    </div>
    <br />
    <div class="actions">
        <%= form.submit 'Créer', class: 'btn btn-primary btn-lg'%>
    </div>
    <% end %>
</div>

<script>
    $(document).ready(function() {

        const sortFunction = (elements) => elements.sort((a, b) => (a.id < b.id) ? -1 : ((a.id > b.id) ? 1 : 0))

        var stations = [];
        let unselectedStationId;

        let data = [ <% @round.stations.each do |station| %>

                {
                    id: <%= station.id %> ,
                    name: "<%= station.station_name %>"
                },

                <% end %>
        ]

        console.log(data);

        sortable('.sortable')

        $("#station_ids_").select2({
            placeholder: "Ajoutez les gares de la tournee",
            theme: "bootstrap",
            allowClear: true,
            closeOnSelect: false,
            multiple: true,
            // sorter: sortFunction,
            data: data
        });

        $("#station_ids_").on("select2:unselect", e => {
            unselectedStationId = e.params.data.id;
            stations.splice(stations.indexOf(unselectedStationId), 1);
        });

        $('#station_ids_').on("select2:clear", e => {
            stations = [];
        });


        // $('#station_ids_').on("select2:select", function(evt) {
        //     var element = evt.params.data.element;
        //     var $element = $(element);
        //     stations = [...stations, element.value];
        //     $element.detach();
        //     $(this).append($element);
        //     $(this).trigger("change");
        // });

        $("#station_ids_").on('select2:select', function(e) {
            var id = e.params.data.id;
            var element = e.params.data.element;
            var option = $(e.target).children('[value=' + id + ']');
            stations = [...stations, element.value];
            option.detach();
            $(e.target).append(option).change();
        });
    });
</script>